@model IEnumerable<RepositoryDto>

@{
    var finder = ViewData["FinderModel"] as GitHubFinderDto;
}

<ol class="breadcrumb">
  <li class="breadcrumb-item"><a asp-controller="GitHubFinder" asp-action="Finder">Finder</a></li>
  <li class="breadcrumb-item active">Repositories</li>
</ol>

<partial name="Finder" model=finder />

<br />

<div>
<form method="get">
    <div class="container border p-4">  
        <div class="row text-center">
            @if (Model != null && Model.Count() > 0)
            {
                <p>@Model.Count() repositories found </p>
            }
            else
            {
                <p>No repositories found for '@(finder != null ? finder.ProjectName : "unknown project")'</p>
            }
        </div> 
        <div class="row">
            @if (Model != null && Model.Any())
            {
                foreach (var repository in Model)
                {
                    <div class="col-md-4">
                        <div class="card mb-4 shadow-sm">
                            <div class="card-header">
                                <h5 class="my-0 font-weight-normal">@repository.Name</h5>
                            </div>
                            <div class="card-body">
                                <h6 class="card-title">Author: @repository.Owner.Author</h6>
                                <h6 class="card-text">Stargazers: @repository.Stargazers</h6>
                                <h6 class="card-text">Watchers: @repository.Watchers</h6>
                                <a href="@repository.RepositoryUrl" class="btn btn-primary">View Details</a>
                            </div>
                        </div>
                    </div>
                }
            }   
        </div>
    </div>
</form>
</div>

<script>
    document.addEventListener('DOMContentLoaded',function () {
      var searchInput = document.getElementById("searchInput");
      var resetSpan = document.getElementById("resetSpan");
      resetSpan.style.display = "inline";
        if (searchInput) {
            searchInput.placeholder = '@(finder != null ? finder.ProjectName : "git's project name...")';
        }
    });
</script> 

<script>
    function resetForm() {
        var search = document.getElementById("searchInput");
        if(confirm("Are you sure you want to reset and delete the found projects?")) {
            $.ajax({
                url: '@Url.Action("Delete", "GitHubFinder")', 
                type: 'DELETE',
                data: { projectName: search.placeholder },
                success: function (response) {
                    document.querySelector('.container.border.p-4').innerHTML = '';
                    search.placeholder = "git's project name...";
                    search.focus();
                    alert("Projects deleted successfully.");
                },
                error: function () {
                    alert('Error deleting projects.');
                }
            });
        }
    }
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}